name: CI Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "22"

      - name: Install dependencies with --legacy-peer-deps
        run: npm install --legacy-peer-deps

      # - name: Run lint  # Dòng này sẽ bị bỏ qua
      #   run: npm run lint  # Dòng này sẽ bị bỏ qua

      # - name: Build project
      #   run: npm run build --no-lint

      # Tạo file .env từ GitHub Secrets
      - name: Create .env file
        run: |
          echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" >> .env
          echo "NEXT_PUBLIC_CLIENT_URL=${{ secrets.NEXT_PUBLIC_CLIENT_URL }}" >> .env
          echo "NEXT_PUBLIC_SOCKET_URL=${{ secrets.NEXT_PUBLIC_SOCKET_URL }}" >> .env
          echo "NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL }}" >> .env

      # Build Docker image và copy .env vào container
      - name: Build Docker image
        run: |
          docker build --build-arg NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} \
                       --build-arg NEXT_PUBLIC_CLIENT_URL=${{ secrets.NEXT_PUBLIC_CLIENT_URL }} \
                       --build-arg NEXT_PUBLIC_SOCKET_URL=${{ secrets.NEXT_PUBLIC_SOCKET_URL }} \
                       --build-arg NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL }} \
                       -t ebai-fe .

      # Đăng nhập vào Docker Hub và push image
      - name: Login to Docker Hub with Token
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Connect to VM, stop, remove old container, and run new Docker container
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} << 'EOF'
            # Stop and remove the old container if it exists
            echo "Stopping and removing old container..."
            docker stop ebai-fe-container || true
            docker rm ebai-fe-container || true
      
            # Pull Docker image from Docker Hub
            echo "Pulling image from Docker Hub..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/ebai-fe:latest
      
            # Run the Docker container with a new name
            echo "Starting new Docker container..."
            docker run -d -p 80:5001 --name ebai-fe-container ${{ secrets.DOCKER_USERNAME }}/ebai-fe:latest
          EOF
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

